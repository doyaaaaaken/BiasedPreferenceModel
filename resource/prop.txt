#シミュレーションの設定を記したファイル

#シミュレーション関係
sim.num = 1000;	//シミュレーション回数
sim.debug = false;	//デバッグするか否か
sim.algorithm.biased = false;	//Anti-conformist biasの機構をシミュレーションに入れるかどうか

#DBへの保存関係
sim.db.clear = true;	//毎実験を始める前にDBの値をクリアするかどうか？
sim.db.saveInterval = 1;	//DBに保存する時間刻み幅
sim.db.saveStartTime = 0;	//DBに保存を開始する時間
sim.db.prefSave.observedTraitKind = 99;	//Agent全体でのPreferenceの値推移を監視する対象の様式番号(preference_history_for_one_traitテーブルに格納するのに使用)

#CSVアウトプット関係
sim.csv.output.traitFreqHistory = true;	//シミュレーション終わりにDBのtrait_freq_historyテーブル情報を全てCSVアウトプットするかどうか
sim.csv.fileName.traitFreqHistory = trait_freq_history.csv; 	//TraitFreqHistory情報をCSVアウトプットする際のファイル名
sim.csv.output.topNtrait = true;	//度数最高値TopNの様式群の推移をCSV出力するかどうか
sim.csv.topNnum = 40;	//TopNのNの値 (Preferenceモデルでは40で指定されている)
sim.csv.fileName.topNtrait = top40trait.csv;
sim.csv.output.traitLifeSpanFreq = true;	//注：様式の寿命分布の出力はDBへの保存時間刻み幅が1でなければ使えません。
sim.csv.fileName.traitLifeSpanFreq = trait_life_span.csv;

#エージェント関係
agent.num = 100;
agent.trait.possessCapacity = 100;	//エージェントが様式を持てる限界数(未実装なので使えない)

#様式関係
trait.initialKindNum = 20;	//初期状態での様式の全種類数
trait.initialHavingKindProportion = 0.3;	//初期状態においてエージェントが全種様式のうちどれだけの割合保持しているか(確率0～1.0)

#突然変異率（0.0～1.0までの小数値で指定）
sim.mutation.newTrait = 0.005;	//Preferenceモデルでは0.001で指定されている
sim.mutation.randomizePreference = 0.001;	//Preferenceモデルでは0.001で指定されている
sim.mutation.agentReborn = 0.01;	//Preferenceモデルでは0.01で指定されている

#DB設定関係
mysql.hostName = localhost;
mysql.dbName = biased_preference_model;
mysql.tableName.traitFreqHistory = trait_freq_history;
mysql.tableName.preferenceHistoryForOneTrait = preference_history_for_one_trait;